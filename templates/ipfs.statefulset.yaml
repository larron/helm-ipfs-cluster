apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "helm-ipfs-cluster.ipfs-name" . }}
spec:
  serviceName: {{ include "helm-ipfs-cluster.ipfs-name" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 6 }}
      nodeType: ipfs
  template:
    metadata:
      labels:
        {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 8 }}
        nodeType: ipfs
    spec:
      {{- with .Values.ipfs.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
      containers:
      - name: ipfs
        image: {{ .Values.ipfs.image.repository }}:{{ .Values.ipfs.image.tag | default "latest" }}
        env:
          - name: IPFS_FD_MAX
            value: "4096"
        ports:
          - name: swarm
            protocol: TCP
            containerPort: 4001
          - name: swarm-udp
            protocol: UDP
            containerPort: 4002
          - name: api
            protocol: TCP
            containerPort: 5001
          - name: ws
            protocol: TCP
            containerPort: 8081
          - name: gateway
            protocol: TCP
            containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: swarm
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 15
        volumeMounts:
        - name: data
          mountPath: /data/ipfs
        {{- if gt (len .Values.ipfs.announceAddressesPerNode) 0 }}
        - name: ipfs-init-config
          mountPath: /container-init.d/ipfs-config.sh
          subPath: ipfs-config.sh
        {{- end }}
        resources:
          {{- toYaml .Values.ipfs.resources | nindent 12 }}
      {{- with .Values.ipfs.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ipfs.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ipfs.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if gt (len .Values.ipfs.announceAddressesPerNode) 0 }}
      volumes:
        - name: ipfs-init-config
          configMap:
            name: ipfs-init-config
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- with .Values.ipfs.storage.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.ipfs.storage.volumeSize | default "1Gi" }}
