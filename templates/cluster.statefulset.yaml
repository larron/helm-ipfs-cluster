{{- range $i, $n := (until (int .Values.replicaCount)) -}}
{{- if ne $i 0 }}
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cluster-{{ $i }}-{{ include "helm-ipfs-cluster.name" $ }}
spec:
  serviceName: cluster-{{ $i }}-{{ include "helm-ipfs-cluster.name" $ }}
  replicas: 1  # must be `1`.
  selector:
    matchLabels:
      {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 6 }}
      nodeType: cluster
  template:
    metadata:
      labels:
        {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 8 }}
        nodeType: cluster
    spec:
      {{- with $.Values.cluster.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-ipfs-cluster.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.cluster.podSecurityContext | nindent 8 }}
      containers:
      - name: cluster
        env:
          - name: CLUSTER_PEERNAME
            value: {{ printf "cluster-%d" $i }}
{{- with $.Values.sharedSecret }}
          - name: CLUSTER_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "helm-ipfs-cluster.fullname" $ }}
                key: secret
{{- end }}
          - name: CLUSTER_IPFSHTTP_NODEMULTIADDRESS
            value: /dns4/{{ include "helm-ipfs-cluster.ipfs-name" $ }}-{{ $i }}.{{ include "helm-ipfs-cluster.ipfs-name" $ }}.{{ $.Release.Namespace }}.svc.cluster.local/tcp/5001
          - name: CLUSTER_CRDT_TRUSTEDPEERS
            value: '*' # Trust all peers in Cluster
          - name: CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS
            value: /ip4/0.0.0.0/tcp/9094 # Expose API
          - name: CLUSTER_IPFSPROXY_LISTENMULTIADDRESS
            value: /ip4/0.0.0.0/tcp/9095 # Expose IPFS Proxy
          - name: CLUSTER_MONITORPINGINTERVAL
            value: 2s # Speed up peer discovery
        image: "{{ $.Values.cluster.image.repository }}:{{ $.Values.cluster.image.tag | default $.Chart.AppVersion }}"
        ports:
        {{- range $.Values.cluster.service.ports }}
        - containerPort: {{ .targetPort }}
          name: {{ .name }}
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: p2p
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /data/ipfs-cluster
        resources:
          {{- toYaml $.Values.cluster.resources | nindent 12 }}
      {{- with $.Values.cluster.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.cluster.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.cluster.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- with $.Values.cluster.storage.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ $.Values.cluster.storage.volumeSize | default "1Gi" }}
{{- end }}
